# ./espresso -t ./test3.pla_dbb_orig_33.pla
# UC Berkeley, Espresso Version #2.3, Release date 01/31/88
# READ       	Time was 0.00 sec, cost is c=76(76) in=753 out=76 tot=829
# COMPL      	Time was 0.00 sec, cost is c=170(88) in=1001 out=170 tot=1171
# PLA is ./test3.pla_dbb_orig_33.pla with 10 inputs and 1 outputs
# ON-set cost is  c=76(76) in=753 out=76 tot=829
# OFF-set cost is c=170(88) in=1001 out=170 tot=1171
# DC-set cost is  c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=64(0) in=614 out=64 tot=678
# IRRED      	Time was 0.00 sec, cost is c=64(0) in=614 out=64 tot=678
# ESSEN      	Time was 0.00 sec, cost is c=63(0) in=605 out=63 tot=668
# REDUCE     	Time was 0.00 sec, cost is c=1(1) in=10 out=1 tot=11
# EXPAND     	Time was 0.00 sec, cost is c=1(0) in=9 out=1 tot=10
# IRRED      	Time was 0.00 sec, cost is c=1(0) in=9 out=1 tot=10
# REDUCE_GASP	Time was 0.00 sec, cost is c=1(1) in=10 out=1 tot=11
# EXPAND_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED_GASP 	Time was 0.00 sec, cost is c=1(0) in=9 out=1 tot=10
# ADJUST     	Cost is c=64(0) in=614 out=64 tot=678
# MV_REDUCE  	Time was 0.00 sec, cost is c=64(0) in=614 out=64 tot=678
# VERIFY     	Time was 0.00 sec, cost is c=64(0) in=614 out=64 tot=678
# READ       	 1 call(s) for 0.00 sec ( 0.0%)
# COMPL      	 1 call(s) for 0.00 sec ( 0.0%)
# ESSEN      	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND     	 2 call(s) for 0.00 sec ( 0.0%)
# IRRED      	 2 call(s) for 0.00 sec ( 0.0%)
# REDUCE     	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# IRRED_GASP 	 1 call(s) for 0.00 sec ( 0.0%)
# REDUCE_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# MV_REDUCE  	 1 call(s) for 0.00 sec ( 0.0%)
# VERIFY     	 1 call(s) for 0.00 sec ( 0.0%)
# ESPRESSO	Time was 0.00 sec, cost is c=64(0) in=614 out=64 tot=678
.i 10
.o 1
.p 64
0-10001011 1
1000110100 1
1100000000 1
111-110100 1
1101000110 1
1000010001 1
1111010101 1
1101010001 1
1100101101 1
100-100010 1
0101000000 1
1011111100 1
1101111000 1
0-01100001 1
0000110110 1
01001-0001 1
1011011101 1
0110100000 1
0101-00111 1
1001101111 1
0101001100 1
1011000011 1
-110011000 1
1010111000 1
0010100110 1
-010101001 1
1111110011 1
11111-1110 1
1101001010 1
1010101111 1
001-101100 1
0111010110 1
1111011001 1
0101000-11 1
0000010011 1
0100001001 1
0111110111 1
0111011100 1
1110101010 1
0010111101 1
0100-11110 1
0010110010 1
0010001000 1
0001011110 1
0001001111 1
0011010010 1
10010101-0 1
-110011011 1
011-001110 1
0010111110 1
0000-11010 1
00-0001011 1
0011011001 1
111011-100 1
0011111111 1
0001-11011 1
10100-0111 1
1001001-01 1
001-001011 1
01111-1011 1
0010111011 1
001110-100 1
01001000-1 1
011100111- 1
.e
# WRITE      	Time was 0.00 sec, cost is c=64(0) in=614 out=64 tot=678
