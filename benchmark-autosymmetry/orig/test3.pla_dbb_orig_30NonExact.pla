# ./espresso -t ./test3.pla_dbb_orig_30.pla
# UC Berkeley, Espresso Version #2.3, Release date 01/31/88
# READ       	Time was 0.00 sec, cost is c=90(90) in=891 out=90 tot=981
# COMPL      	Time was 0.00 sec, cost is c=186(186) in=1112 out=186 tot=1298
# PLA is ./test3.pla_dbb_orig_30.pla with 10 inputs and 1 outputs
# ON-set cost is  c=90(90) in=891 out=90 tot=981
# OFF-set cost is c=186(186) in=1112 out=186 tot=1298
# DC-set cost is  c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=73(0) in=695 out=73 tot=768
# IRRED      	Time was 0.00 sec, cost is c=72(0) in=686 out=72 tot=758
# ESSEN      	Time was 0.00 sec, cost is c=68(0) in=650 out=68 tot=718
# REDUCE     	Time was 0.00 sec, cost is c=4(3) in=39 out=4 tot=43
# EXPAND     	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# IRRED      	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# REDUCE_GASP	Time was 0.00 sec, cost is c=4(3) in=39 out=4 tot=43
# EXPAND_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED_GASP 	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# ADJUST     	Cost is c=72(0) in=686 out=72 tot=758
# MV_REDUCE  	Time was 0.00 sec, cost is c=72(0) in=686 out=72 tot=758
# VERIFY     	Time was 0.00 sec, cost is c=72(0) in=686 out=72 tot=758
# READ       	 1 call(s) for 0.00 sec ( 0.0%)
# COMPL      	 1 call(s) for 0.00 sec ( 0.0%)
# ESSEN      	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND     	 2 call(s) for 0.00 sec ( 0.0%)
# IRRED      	 2 call(s) for 0.00 sec ( 0.0%)
# REDUCE     	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# IRRED_GASP 	 1 call(s) for 0.00 sec ( 0.0%)
# REDUCE_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# MV_REDUCE  	 1 call(s) for 0.00 sec ( 0.0%)
# VERIFY     	 1 call(s) for 0.00 sec ( 0.0%)
# ESPRESSO	Time was 0.00 sec, cost is c=72(0) in=686 out=72 tot=758
.i 10
.o 1
.p 72
-110011001 1
-010010000 1
1-11011001 1
101101101- 1
000-000001 1
0001100111 1
0101010111 1
0101011011 1
0001001010 1
1101000001 1
001-100010 1
1000010001 1
0110000011 1
1000100111 1
1100110010 1
10-0011010 1
00110-0110 1
1001111111 1
1110110011 1
1100110111 1
1110000010 1
0011100001 1
0010001011 1
-101110000 1
1-01010100 1
110001-000 1
0101001110 1
010-100101 1
11010-0100 1
0000-11110 1
-001011101 1
1001111000 1
1111110110 1
1010110001 1
1100010101 1
0111001111 1
0-11111111 1
0010-10000 1
1000000100 1
0000011000 1
001010-010 1
1000101110 1
0101101000 1
0001001100 1
1010-00000 1
0-11011110 1
0000001101 1
01101-0110 1
1111100101 1
0-10101111 1
0010001110 1
-111101001 1
0101111101 1
-111101110 1
11100-1001 1
1000101101 1
01-0011101 1
1011011100 1
01-0100101 1
1-10111000 1
0000101100 1
1110111110 1
1110100100 1
1111111100 1
1110101101 1
0110001100 1
1101100-10 1
001010001- 1
1101101-11 1
10111101-1 1
1111011-01 1
011010100- 1
.e
# WRITE      	Time was 0.00 sec, cost is c=72(0) in=686 out=72 tot=758
