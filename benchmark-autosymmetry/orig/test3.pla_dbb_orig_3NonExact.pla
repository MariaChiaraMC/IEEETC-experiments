# ./espresso -t ./test3.pla_dbb_orig_3.pla
# UC Berkeley, Espresso Version #2.3, Release date 01/31/88
# READ       	Time was 0.00 sec, cost is c=87(87) in=856 out=87 tot=943
# COMPL      	Time was 0.00 sec, cost is c=170(133) in=1010 out=170 tot=1180
# PLA is ./test3.pla_dbb_orig_3.pla with 10 inputs and 1 outputs
# ON-set cost is  c=87(87) in=856 out=87 tot=943
# OFF-set cost is c=170(133) in=1010 out=170 tot=1180
# DC-set cost is  c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=74(0) in=698 out=74 tot=772
# IRRED      	Time was 0.00 sec, cost is c=72(0) in=680 out=72 tot=752
# ESSEN      	Time was 0.00 sec, cost is c=70(0) in=662 out=70 tot=732
# REDUCE     	Time was 0.00 sec, cost is c=2(2) in=20 out=2 tot=22
# EXPAND     	Time was 0.00 sec, cost is c=2(0) in=18 out=2 tot=20
# IRRED      	Time was 0.00 sec, cost is c=2(0) in=18 out=2 tot=20
# REDUCE_GASP	Time was 0.00 sec, cost is c=2(2) in=20 out=2 tot=22
# EXPAND_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED_GASP 	Time was 0.00 sec, cost is c=2(0) in=18 out=2 tot=20
# ADJUST     	Cost is c=72(0) in=680 out=72 tot=752
# MV_REDUCE  	Time was 0.00 sec, cost is c=72(0) in=680 out=72 tot=752
# VERIFY     	Time was 0.00 sec, cost is c=72(0) in=680 out=72 tot=752
# READ       	 1 call(s) for 0.00 sec ( 0.0%)
# COMPL      	 1 call(s) for 0.00 sec ( 0.0%)
# ESSEN      	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND     	 2 call(s) for 0.00 sec ( 0.0%)
# IRRED      	 2 call(s) for 0.00 sec ( 0.0%)
# REDUCE     	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# IRRED_GASP 	 1 call(s) for 0.00 sec ( 0.0%)
# REDUCE_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# MV_REDUCE  	 1 call(s) for 0.00 sec ( 0.0%)
# VERIFY     	 1 call(s) for 0.00 sec ( 0.0%)
# ESPRESSO	Time was 0.00 sec, cost is c=72(0) in=680 out=72 tot=752
.i 10
.o 1
.p 72
01001-1000 1
0000-10011 1
-011000011 1
-011010001 1
1011010100 1
1101010011 1
1111111011 1
10-100-011 1
0010-10010 1
0001000110 1
1110010100 1
0011101110 1
0000000-11 1
1100011111 1
01000-0110 1
1111111100 1
1011-00010 1
1110101111 1
1011-01100 1
-001111110 1
1001111011 1
1010100101 1
101011-100 1
0110011100 1
11100-1110 1
-110110001 1
1001-00011 1
010110-011 1
0100111111 1
0101011001 1
1001100101 1
0101100101 1
0110010000 1
1001011100 1
1101001110 1
1110000001 1
1101001-01 1
0011101001 1
11001-0011 1
0111101100 1
0010101101 1
0010001010 1
1010001001 1
0010000000 1
0101110000 1
0-00110010 1
010000-110 1
0100-01101 1
1-00000100 1
1110111000 1
0001101100 1
1001111000 1
0-00111100 1
1100111010 1
1100111001 1
01-0100001 1
1000110000 1
100000-100 1
00-0101000 1
010-101000 1
001101101- 1
1001010-10 1
-100101000 1
1110011-10 1
00000100-1 1
011000010- 1
01101-0100 1
1101101-11 1
101011110- 1
100100101- 1
000000001- 1
1000000-00 1
.e
# WRITE      	Time was 0.00 sec, cost is c=72(0) in=680 out=72 tot=752
