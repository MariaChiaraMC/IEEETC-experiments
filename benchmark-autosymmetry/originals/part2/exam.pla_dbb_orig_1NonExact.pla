# ./espresso -t ./exam.pla_dbb_orig_1.pla
# UC Berkeley, Espresso Version #2.3, Release date 01/31/88
# READ       	Time was 0.00 sec, cost is c=55(55) in=521 out=55 tot=576
# COMPL      	Time was 0.00 sec, cost is c=105(50) in=549 out=105 tot=654
# PLA is ./exam.pla_dbb_orig_1.pla with 10 inputs and 1 outputs
# ON-set cost is  c=55(55) in=521 out=55 tot=576
# OFF-set cost is c=105(50) in=549 out=105 tot=654
# DC-set cost is  c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=55(0) in=497 out=55 tot=552
# IRRED      	Time was 0.00 sec, cost is c=55(0) in=497 out=55 tot=552
# ESSEN      	Time was 0.00 sec, cost is c=53(0) in=479 out=53 tot=532
# REDUCE     	Time was 0.00 sec, cost is c=2(2) in=20 out=2 tot=22
# EXPAND     	Time was 0.00 sec, cost is c=2(0) in=18 out=2 tot=20
# IRRED      	Time was 0.00 sec, cost is c=2(0) in=18 out=2 tot=20
# REDUCE_GASP	Time was 0.00 sec, cost is c=2(2) in=20 out=2 tot=22
# EXPAND_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED_GASP 	Time was 0.00 sec, cost is c=2(0) in=18 out=2 tot=20
# ADJUST     	Cost is c=55(0) in=497 out=55 tot=552
# MV_REDUCE  	Time was 0.00 sec, cost is c=55(0) in=497 out=55 tot=552
# VERIFY     	Time was 0.00 sec, cost is c=55(0) in=497 out=55 tot=552
# READ       	 1 call(s) for 0.00 sec ( 0.0%)
# COMPL      	 1 call(s) for 0.00 sec ( 0.0%)
# ESSEN      	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND     	 2 call(s) for 0.00 sec ( 0.0%)
# IRRED      	 2 call(s) for 0.00 sec ( 0.0%)
# REDUCE     	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# IRRED_GASP 	 1 call(s) for 0.00 sec ( 0.0%)
# REDUCE_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# MV_REDUCE  	 1 call(s) for 0.00 sec ( 0.0%)
# VERIFY     	 1 call(s) for 0.00 sec ( 0.0%)
# ESPRESSO	Time was 0.00 sec, cost is c=55(0) in=497 out=55 tot=552
.i 10
.o 1
.p 55
-100000010 1
0-10010110 1
1-1-110001 1
10-0001101 1
0101011101 1
10-0011110 1
0100111001 1
0100010101 1
1-1-100010 1
0101110010 1
-011110001 1
0101-01110 1
0111001001 1
1-1-101011 1
0100101010 1
0011001101 1
10-0000111 1
0111101101 1
0101111011 1
0100-00110 1
1-11-10001 1
0010101001 1
0110000001 1
0101010111 1
0-11011110 1
00-0000101 1
0010-11010 1
0111-11110 1
0110100101 1
0100110011 1
0-10111010 1
-011100010 1
0110-10110 1
0100001111 1
1-11-00010 1
-011101011 1
0111000011 1
0110011111 1
0011000111 1
0111100111 1
0010100011 1
0101001-10 1
1-11-01011 1
100--01101 1
100--11110 1
0111011-10 1
0010111-10 1
0110010-10 1
100--00111 1
000--00101 1
000--10110 1
11---10001 1
000--11111 1
11---00010 1
11---01011 1
.e
# WRITE      	Time was 0.00 sec, cost is c=55(0) in=497 out=55 tot=552
