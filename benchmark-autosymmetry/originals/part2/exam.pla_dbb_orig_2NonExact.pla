# ./espresso -t ./exam.pla_dbb_orig_2.pla
# UC Berkeley, Espresso Version #2.3, Release date 01/31/88
# READ       	Time was 0.00 sec, cost is c=49(49) in=466 out=49 tot=515
# COMPL      	Time was 0.00 sec, cost is c=103(42) in=525 out=103 tot=628
# PLA is ./exam.pla_dbb_orig_2.pla with 10 inputs and 1 outputs
# ON-set cost is  c=49(49) in=466 out=49 tot=515
# OFF-set cost is c=103(42) in=525 out=103 tot=628
# DC-set cost is  c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=48(0) in=440 out=48 tot=488
# IRRED      	Time was 0.00 sec, cost is c=48(0) in=440 out=48 tot=488
# ESSEN      	Time was 0.00 sec, cost is c=48(0) in=440 out=48 tot=488
# REDUCE     	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED      	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# REDUCE_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# EXPAND_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED_GASP 	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# ADJUST     	Cost is c=48(0) in=440 out=48 tot=488
# MV_REDUCE  	Time was 0.00 sec, cost is c=48(0) in=440 out=48 tot=488
# VERIFY     	Time was 0.00 sec, cost is c=48(0) in=440 out=48 tot=488
# READ       	 1 call(s) for 0.00 sec ( 0.0%)
# COMPL      	 1 call(s) for 0.00 sec ( 0.0%)
# ESSEN      	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND     	 2 call(s) for 0.00 sec ( 0.0%)
# IRRED      	 2 call(s) for 0.00 sec ( 0.0%)
# REDUCE     	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# IRRED_GASP 	 1 call(s) for 0.00 sec ( 0.0%)
# REDUCE_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# MV_REDUCE  	 1 call(s) for 0.00 sec ( 0.0%)
# VERIFY     	 1 call(s) for 0.00 sec ( 0.0%)
# ESPRESSO	Time was 0.00 sec, cost is c=48(0) in=440 out=48 tot=488
.i 10
.o 1
.p 48
0101011001 1
10-0001001 1
0101110010 1
0101111101 1
1-1-100010 1
0100010001 1
1-1-101101 1
0100110101 1
0111-11110 1
0101001110 1
0010011010 1
0110010110 1
0100000110 1
0010111110 1
0110111010 1
0100101010 1
0101010011 1
10-0000011 1
0101110111 1
1-1-100111 1
0011001001 1
0111000101 1
-011100010 1
-011101101 1
00-0000001 1
0111101001 1
0010100101 1
0010011111 1
0110100001 1
0110011011 1
0100001011 1
0110111111 1
1-11-00010 1
1-11-01101 1
0100101111 1
0011000011 1
100--11110 1
-011100111 1
0111100011 1
1-11-00111 1
100--01001 1
000--10110 1
100--00011 1
000--00001 1
000--11011 1
11---00010 1
11---01101 1
11---00111 1
.e
# WRITE      	Time was 0.00 sec, cost is c=48(0) in=440 out=48 tot=488
