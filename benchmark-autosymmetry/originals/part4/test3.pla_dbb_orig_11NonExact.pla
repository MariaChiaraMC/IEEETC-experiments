# ./espresso -t ./test3.pla_dbb_orig_11.pla
# UC Berkeley, Espresso Version #2.3, Release date 01/31/88
# READ       	Time was 0.00 sec, cost is c=91(91) in=895 out=91 tot=986
# COMPL      	Time was 0.00 sec, cost is c=197(197) in=1200 out=197 tot=1397
# PLA is ./test3.pla_dbb_orig_11.pla with 10 inputs and 1 outputs
# ON-set cost is  c=91(91) in=895 out=91 tot=986
# OFF-set cost is c=197(197) in=1200 out=197 tot=1397
# DC-set cost is  c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=72(0) in=678 out=72 tot=750
# IRRED      	Time was 0.00 sec, cost is c=72(0) in=678 out=72 tot=750
# ESSEN      	Time was 0.00 sec, cost is c=67(0) in=633 out=67 tot=700
# REDUCE     	Time was 0.00 sec, cost is c=5(2) in=47 out=5 tot=52
# EXPAND     	Time was 0.00 sec, cost is c=5(0) in=45 out=5 tot=50
# IRRED      	Time was 0.00 sec, cost is c=5(0) in=45 out=5 tot=50
# REDUCE_GASP	Time was 0.00 sec, cost is c=5(2) in=47 out=5 tot=52
# EXPAND_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED_GASP 	Time was 0.00 sec, cost is c=5(0) in=45 out=5 tot=50
# ADJUST     	Cost is c=72(0) in=678 out=72 tot=750
# MV_REDUCE  	Time was 0.00 sec, cost is c=72(0) in=678 out=72 tot=750
# VERIFY     	Time was 0.00 sec, cost is c=72(0) in=678 out=72 tot=750
# READ       	 1 call(s) for 0.00 sec ( 0.0%)
# COMPL      	 1 call(s) for 0.00 sec ( 0.0%)
# ESSEN      	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND     	 2 call(s) for 0.00 sec ( 0.0%)
# IRRED      	 2 call(s) for 0.00 sec ( 0.0%)
# REDUCE     	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# IRRED_GASP 	 1 call(s) for 0.00 sec ( 0.0%)
# REDUCE_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# MV_REDUCE  	 1 call(s) for 0.00 sec ( 0.0%)
# VERIFY     	 1 call(s) for 0.00 sec ( 0.0%)
# ESPRESSO	Time was 0.00 sec, cost is c=72(0) in=678 out=72 tot=750
.i 10
.o 1
.p 72
-111010010 1
-110011000 1
001111-010 1
10000-1001 1
10001110-1 1
010-000111 1
1101101100 1
0001110100 1
0100-00111 1
1101011001 1
0001101100 1
1101101111 1
0001100011 1
1111000-00 1
00-1111001 1
0100011101 1
1001000000 1
0110100100 1
1001010100 1
000010-000 1
110-011110 1
1001010001 1
-000110101 1
0111011101 1
11-0111000 1
0110-10001 1
1100001100 1
0011100001 1
1-11110111 1
1100000010 1
0011000100 1
1111001101 1
111-000111 1
0000100110 1
0-10101101 1
100-000011 1
1001010111 1
0111011110 1
1-00101011 1
1111101110 1
01100-0111 1
01100-1000 1
1000101100 1
0000010010 1
001010-101 1
0110101110 1
1111011111 1
1001011010 1
00-0111010 1
0011101110 1
-010010000 1
111-010010 1
1110111110 1
00101-1101 1
0011011111 1
1010000101 1
1010100111 1
101-011011 1
10101-1010 1
1-0011010- 1
010000-111 1
011111001- 1
1111010-10 1
000111111- 1
1011100-10 1
100100111- 1
101110100- 1
0010101-01 1
001000000- 1
001100101- 1
100000101- 1
0010001-11 1
.e
# WRITE      	Time was 0.00 sec, cost is c=72(0) in=678 out=72 tot=750
