# ./espresso -t ./test3.pla_dbb_orig_26.pla
# UC Berkeley, Espresso Version #2.3, Release date 01/31/88
# READ       	Time was 0.00 sec, cost is c=86(86) in=849 out=86 tot=935
# COMPL      	Time was 0.00 sec, cost is c=191(135) in=1132 out=191 tot=1323
# PLA is ./test3.pla_dbb_orig_26.pla with 10 inputs and 1 outputs
# ON-set cost is  c=86(86) in=849 out=86 tot=935
# OFF-set cost is c=191(135) in=1132 out=191 tot=1323
# DC-set cost is  c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=75(0) in=717 out=75 tot=792
# IRRED      	Time was 0.00 sec, cost is c=74(0) in=708 out=74 tot=782
# ESSEN      	Time was 0.00 sec, cost is c=70(0) in=672 out=70 tot=742
# REDUCE     	Time was 0.00 sec, cost is c=4(4) in=40 out=4 tot=44
# EXPAND     	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# IRRED      	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# REDUCE_GASP	Time was 0.00 sec, cost is c=4(4) in=40 out=4 tot=44
# EXPAND_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED_GASP 	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# ADJUST     	Cost is c=74(0) in=708 out=74 tot=782
# MV_REDUCE  	Time was 0.00 sec, cost is c=74(0) in=708 out=74 tot=782
# VERIFY     	Time was 0.00 sec, cost is c=74(0) in=708 out=74 tot=782
# READ       	 1 call(s) for 0.00 sec ( 0.0%)
# COMPL      	 1 call(s) for 0.00 sec ( 0.0%)
# ESSEN      	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND     	 2 call(s) for 0.00 sec ( 0.0%)
# IRRED      	 2 call(s) for 0.00 sec ( 0.0%)
# REDUCE     	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# IRRED_GASP 	 1 call(s) for 0.00 sec ( 0.0%)
# REDUCE_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# MV_REDUCE  	 1 call(s) for 0.00 sec ( 0.0%)
# VERIFY     	 1 call(s) for 0.00 sec ( 0.0%)
# ESPRESSO	Time was 0.00 sec, cost is c=74(0) in=708 out=74 tot=782
.i 10
.o 1
.p 74
01001011-0 1
00111-0101 1
1111-01011 1
-101011001 1
-000010000 1
10101-0001 1
1001010011 1
1000111000 1
00-1110100 1
0000011011 1
1010110010 1
0000000001 1
0001010111 1
1-01110111 1
1000111111 1
1010-00001 1
1110010001 1
0001101001 1
-101110101 1
001110-000 1
1100110010 1
0011011010 1
1001100010 1
0-11100101 1
1000101011 1
1100111011 1
1010011111 1
1011000000 1
1011011100 1
011-010010 1
0000101010 1
1110110100 1
0100011010 1
0000000110 1
010100-001 1
1000001101 1
0110111101 1
0110011011 1
001000-111 1
0-00101111 1
1100111100 1
1-11101011 1
1110010111 1
1111010100 1
1001101100 1
1110111010 1
0111-10110 1
1101000000 1
1010001010 1
0110000011 1
1100100100 1
1000001110 1
0101011110 1
1110001001 1
1110000101 1
010--01100 1
1111111110 1
1101101010 1
1011001110 1
111110-111 1
010-101111 1
01-0-01100 1
1110100110 1
-111001010 1
1101001111 1
1111000110 1
0111101110 1
100001000- 1
0100010-11 1
0011000-01 1
01110100-0 1
110101100- 1
001000111- 1
111110110- 1
.e
# WRITE      	Time was 0.00 sec, cost is c=74(0) in=708 out=74 tot=782
