# ./espresso -t ./test3.pla_dbb_orig_27.pla
# UC Berkeley, Espresso Version #2.3, Release date 01/31/88
# READ       	Time was 0.00 sec, cost is c=85(85) in=842 out=85 tot=927
# COMPL      	Time was 0.00 sec, cost is c=188(188) in=1122 out=188 tot=1310
# PLA is ./test3.pla_dbb_orig_27.pla with 10 inputs and 1 outputs
# ON-set cost is  c=85(85) in=842 out=85 tot=927
# OFF-set cost is c=188(188) in=1122 out=188 tot=1310
# DC-set cost is  c=0(0) in=0 out=0 tot=0
# EXPAND     	Time was 0.00 sec, cost is c=72(0) in=691 out=72 tot=763
# IRRED      	Time was 0.00 sec, cost is c=71(0) in=682 out=71 tot=753
# ESSEN      	Time was 0.00 sec, cost is c=67(0) in=646 out=67 tot=713
# REDUCE     	Time was 0.00 sec, cost is c=4(1) in=37 out=4 tot=41
# EXPAND     	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# IRRED      	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# REDUCE_GASP	Time was 0.00 sec, cost is c=4(1) in=37 out=4 tot=41
# EXPAND_GASP	Time was 0.00 sec, cost is c=0(0) in=0 out=0 tot=0
# IRRED_GASP 	Time was 0.00 sec, cost is c=4(0) in=36 out=4 tot=40
# ADJUST     	Cost is c=71(0) in=682 out=71 tot=753
# MV_REDUCE  	Time was 0.00 sec, cost is c=71(0) in=682 out=71 tot=753
# VERIFY     	Time was 0.00 sec, cost is c=71(0) in=682 out=71 tot=753
# READ       	 1 call(s) for 0.00 sec ( 0.0%)
# COMPL      	 1 call(s) for 0.00 sec ( 0.0%)
# ESSEN      	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND     	 2 call(s) for 0.00 sec ( 0.0%)
# IRRED      	 2 call(s) for 0.00 sec ( 0.0%)
# REDUCE     	 1 call(s) for 0.00 sec ( 0.0%)
# EXPAND_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# IRRED_GASP 	 1 call(s) for 0.00 sec ( 0.0%)
# REDUCE_GASP	 1 call(s) for 0.00 sec ( 0.0%)
# MV_REDUCE  	 1 call(s) for 0.00 sec ( 0.0%)
# VERIFY     	 1 call(s) for 0.00 sec ( 0.0%)
# ESPRESSO	Time was 0.00 sec, cost is c=71(0) in=682 out=71 tot=753
.i 10
.o 1
.p 71
001000100- 1
00100000-0 1
010-000110 1
01-0100110 1
00-0111000 1
1111111110 1
1111101001 1
001-011001 1
10-1110010 1
1110110001 1
1000011000 1
1111010010 1
1111001011 1
011101-110 1
01110-1101 1
0001011000 1
101-001101 1
1010001011 1
1001101001 1
1001011100 1
1110101111 1
1011000010 1
-000111110 1
001100-110 1
1001010000 1
1011100110 1
0001111101 1
11011-1011 1
0101-11110 1
0010100001 1
0010000-00 1
0100011001 1
110110-110 1
0011000001 1
011-001101 1
1110-00110 1
110111-011 1
1101010001 1
1100110100 1
0000101100 1
1111000101 1
1000010010 1
0001101110 1
0110010101 1
1101110101 1
0-00101011 1
1100001011 1
0000110100 1
1000001110 1
1100100001 1
0-10000011 1
1000100100 1
0101100001 1
0100-10011 1
1000100011 1
1100110111 1
1101000100 1
1100010101 1
0001100011 1
0100010100 1
0001010101 1
1101010111 1
0000000001 1
0000100101 1
0000010111 1
101111101- 1
01010001-1 1
11011110-1 1
010010101- 1
001010011- 1
110110011- 1
.e
# WRITE      	Time was 0.00 sec, cost is c=71(0) in=682 out=71 tot=753
